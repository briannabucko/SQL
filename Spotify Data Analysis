# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )
--

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#Part 1: What is the average danceability by artist and track? 
SELECT AVG(danceability) AS AvgDanceability, 
artist_name,
track_name
FROM BIT_db.Spotifydata
GROUP BY artist_name;

#Part 2: Who are the top 10 artists based on popularity? 
SELECT distinct artist_name
FROM BIT_db.Spotifydata
ORDER BY popularity desc LIMIT 10;
#Question 3: What artist released the longest song? 
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc LIMIT 1;

#Part 4: What's the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS AvgDanceability, 
track_name,
popularity
FROM BIT_db.Spotifydata
GROUP BY track_name
ORDER BY popularity desc LIMIT 10;

#Part 5: What is the average tempo of the top 5 most popular songs?
SELECT AVG(tempo) AS AvgTempo,
track_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity desc LIMIT 5;

#Part 6: Which artist's have the 5 least popular songs? What was the popularity of each song?
SELECT popularity,
artist_name,
track_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity asc LIMIT 5; 

#Part 7:Which song is the least danceable and what is the tempo, loudness?
SELECT track_name,
tempo,
loudness
FROM BIT_DB.Spotifydata
ORDER BY danceability asc LIMIT 1;

#Part 8: Show the names of artists who appear at least twice in the most popular songs.
SELECT artist_name
FROM BIT_db.Spotifydata
GROUP BY artist_name
HAVING COUNT(artist_name) >= 2
ORDER BY popularity desc LIMIT 10;

#Part 9: Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH pop_avg_cte AS (
  SELECT artist_name,
   AVG(popularity) AS AvgPop
  FROM Spotifydata 
  GROUP BY artist_name
)
SELECT artist_name,
AvgPop,
'Top Star' AS tag
 from pop_avg_cte
 WHERE AvgPop>= 90;
